/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SpotBase, SpotBaseInterface } from "../SpotBase";

const _abi = [
  {
    inputs: [],
    name: "EmptyLocation",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyName",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRating",
    type: "error",
  },
  {
    inputs: [],
    name: "PlaceNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "placeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "PlaceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "placeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
    ],
    name: "ReviewAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "placeId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "addReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    name: "createPlace",
    outputs: [
      {
        internalType: "uint256",
        name: "placeId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "placeId",
        type: "uint256",
      },
    ],
    name: "getPlace",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reviewCount",
            type: "uint256",
          },
        ],
        internalType: "struct SpotBase.Place",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "placeId",
        type: "uint256",
      },
    ],
    name: "getReviews",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reviewer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "rating",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct SpotBase.Review[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPlaceId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f02806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063197c35551461005c5780634909f98b146100855780639d4a22551461009a578063c8be2ede146100ba578063ce713098146100d1575b600080fd5b61006f61006a366004610a2f565b6100e4565b60405161007c9190610a8e565b60405180910390f35b610098610093366004610b62565b610349565b005b6100ad6100a8366004610a2f565b6104eb565b60405161007c9190610bc4565b6100c360025481565b60405190815260200161007c565b6100c36100df366004610c60565b610831565b6101266040518060c0016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b600082815260208181526040808320815160c0810190925280546001600160a01b03168252600181018054929391929184019161016290610cfa565b80601f016020809104026020016040519081016040528092919081815260200182805461018e90610cfa565b80156101db5780601f106101b0576101008083540402835291602001916101db565b820191906000526020600020905b8154815290600101906020018083116101be57829003601f168201915b505050505081526020016002820180546101f490610cfa565b80601f016020809104026020016040519081016040528092919081815260200182805461022090610cfa565b801561026d5780601f106102425761010080835404028352916020019161026d565b820191906000526020600020905b81548152906001019060200180831161025057829003601f168201915b5050505050815260200160038201805461028690610cfa565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610cfa565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b50505050508152602001600482015481526020016005820154815250509050806080015160000361034357604051630b4ab55d60e01b815260040160405180910390fd5b92915050565b60018360ff16108061035e575060058360ff16115b1561037c5760405163d29df2dd60e01b815260040160405180910390fd5b600084815260208190526040812060048101549091036103af57604051630b4ab55d60e01b815260040160405180910390fd5b600160008681526020019081526020016000206040518060800160405280336001600160a01b031681526020018660ff16815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050426020938401525083546001818101865594825290829020835160039092020180549284015160ff16600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091178155604082015191929091908201906104839082610d9b565b5060608201518160020155505060018160050160008282546104a59190610e71565b909155505060405160ff85168152339086907fcd105d6c08f27f681ab198bd63b5f4b32ce4977facd0909acb589cf2c82668729060200160405180910390a35050505050565b600081815260208181526040808320815160c0810190925280546001600160a01b03168252600181018054606095948401919061052790610cfa565b80601f016020809104026020016040519081016040528092919081815260200182805461055390610cfa565b80156105a05780601f10610575576101008083540402835291602001916105a0565b820191906000526020600020905b81548152906001019060200180831161058357829003601f168201915b505050505081526020016002820180546105b990610cfa565b80601f01602080910402602001604051908101604052809291908181526020018280546105e590610cfa565b80156106325780601f1061060757610100808354040283529160200191610632565b820191906000526020600020905b81548152906001019060200180831161061557829003601f168201915b5050505050815260200160038201805461064b90610cfa565b80601f016020809104026020016040519081016040528092919081815260200182805461067790610cfa565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b50505050508152602001600482015481526020016005820154815250509050806080015160000361070857604051630b4ab55d60e01b815260040160405180910390fd5b600083815260016020908152604080832080548251818502810185019093528083529193909284015b82821015610825576000848152602090819020604080516080810182526003860290920180546001600160a01b0381168452600160a01b900460ff16938301939093526001830180549293929184019161078a90610cfa565b80601f01602080910402602001604051908101604052809291908181526020018280546107b690610cfa565b80156108035780601f106107d857610100808354040283529160200191610803565b820191906000526020600020905b8154815290600101906020018083116107e657829003601f168201915b5050505050815260200160028201548152505081526020019060010190610731565b50505050915050919050565b600085810361085357604051632ef1310560e01b815260040160405180910390fd5b600082900361087557604051632656eee560e01b815260040160405180910390fd5b60026000815461088490610e84565b91905081905590506040518060c00160405280336001600160a01b0316815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f890181900481028201810190925287815291810191908890889081908401838280828437600092019190915250505090825250604080516020601f8701819004810282018101909252858152918101919086908690819084018382808284376000920182905250938552505042602080850191909152604093840183905285835282815292909120835181546001600160a01b0319166001600160a01b039091161781559183015160018301915061099f9082610d9b565b50604082015160028201906109b49082610d9b565b50606082015160038201906109c99082610d9b565b506080820151816004015560a08201518160050155905050336001600160a01b0316817f3fc752fa1ad1f18a3228624efa6464f73a162525f22151053a1e3fdcd497a0da8989604051610a1d929190610e9d565b60405180910390a39695505050505050565b600060208284031215610a4157600080fd5b5035919050565b6000815180845260005b81811015610a6e57602081850181015186830182015201610a52565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b03168282015282015160c06040830152600090610abc60e0840182610a48565b90506040840151601f1980858403016060860152610ada8383610a48565b9250606086015191508085840301608086015250610af88282610a48565b915050608084015160a084015260a084015160c08401528091505092915050565b60008083601f840112610b2b57600080fd5b50813567ffffffffffffffff811115610b4357600080fd5b602083019150836020828501011115610b5b57600080fd5b9250929050565b60008060008060608587031215610b7857600080fd5b84359350602085013560ff81168114610b9057600080fd5b9250604085013567ffffffffffffffff811115610bac57600080fd5b610bb887828801610b19565b95989497509550505050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610c5257888303603f19018552815180516001600160a01b031684528781015160ff168885015286810151608088860181905290610c3182870182610a48565b60609384015196909301959095525094870194925090860190600101610bed565b509098975050505050505050565b60008060008060008060608789031215610c7957600080fd5b863567ffffffffffffffff80821115610c9157600080fd5b610c9d8a838b01610b19565b90985096506020890135915080821115610cb657600080fd5b610cc28a838b01610b19565b90965094506040890135915080821115610cdb57600080fd5b50610ce889828a01610b19565b979a9699509497509295939492505050565b600181811c90821680610d0e57607f821691505b602082108103610d2e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610d96576000816000526020600020601f850160051c81016020861015610d735750805b601f850160051c820191505b81811015610d9257828155600101610d7f565b5050505b505050565b815167ffffffffffffffff811115610db557610db5610d34565b610dc981610dc38454610cfa565b84610d4a565b602080601f831160018114610dfe5760008415610de65750858301515b600019600386901b1c1916600185901b178555610d92565b600085815260208120601f198616915b82811015610e2d57888601518255948401946001909101908401610e0e565b5085821015610e4b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561034357610343610e5b565b600060018201610e9657610e96610e5b565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea26469706673582212205d08161732c559b5cad5e2c7204ad15b8f8d72b3e1b029326929c39f0051a2da64736f6c63430008180033";

type SpotBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpotBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpotBase__factory extends ContractFactory {
  constructor(...args: SpotBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpotBase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SpotBase__factory {
    return super.connect(runner) as SpotBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpotBaseInterface {
    return new Interface(_abi) as SpotBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SpotBase {
    return new Contract(address, _abi, runner) as unknown as SpotBase;
  }
}
